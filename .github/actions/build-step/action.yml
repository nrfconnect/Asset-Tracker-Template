name: "Buildstep"
description: "Build ATT firmware"
inputs:
  memfault_project_key:
    type: string
    required: false
    default: "fookey"
  memfault_fw_type:
    type: string
    required: false
    default: "asset-tracker-template-dev"
  memfault_fw_version_prefix:
    type: string
    required: false
    default: "0.0.0-dev"
  board:
    type: string
    required: true
  short_board:
    type: string
    required: true
  version:
    type: string
    required: false
    default: "0.0.0-dev"
  path:
    type: string
    required: true
    default: "."
  debug:
    type: boolean
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Set up environment
      working-directory: ${{ inputs.path }}
      id: setup
      shell: bash
      run: |
        cp overlay-memfault.conf overlay-memfault-att.conf
        if [[ "${{ inputs.debug }}" == "true" ]]; then
          cat overlay-etb.conf >> overlay-memfault-att.conf
        fi
        echo CONFIG_MEMFAULT_NCS_PROJECT_KEY=\"${{ inputs.memfault_project_key }}\" >> overlay-memfault-att.conf
        echo CONFIG_MEMFAULT_NCS_FW_VERSION_AUTO=y >> overlay-memfault-att.conf
        echo CONFIG_MEMFAULT_NCS_FW_VERSION_PREFIX=\"${{ inputs.memfault_fw_version_prefix }}+\" >> overlay-memfault-att.conf
        echo CONFIG_MEMFAULT_NCS_FW_TYPE=\"${{ inputs.memfault_fw_type }}\" >> overlay-memfault-att.conf

    - name: Build firmware
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        west build -b ${{ inputs.board }} \
          -d build \
          -p --sysbuild \
          -- -DEXTRA_CONF_FILE="overlay-memfault-att.conf" 2>&1 | tee ../../artifacts/build_output_${{ inputs.short_board }}.log

    - name: Copy artifacts
      shell: bash
      run: |
        mkdir -p artifacts
        cp ${{ inputs.path }}/build/merged.hex \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91.hex
        cp ${{ inputs.path }}/build/app/zephyr/.config \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91.config
        cp ${{ inputs.path }}/build/app/zephyr/zephyr.signed.bin \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91-update-signed.bin
        cp ${{ inputs.path }}/build/app/zephyr/zephyr.signed.hex \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91-update-signed.hex
        cp ${{ inputs.path }}/build/app/zephyr/zephyr.elf \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91.elf
        cp ${{ inputs.path }}/build/dfu_application.zip \
          artifacts/asset-tracker-template-${{ inputs.version }}-${{ inputs.short_board }}-nrf91-dfu.zip
        cd ${{ inputs.path }}/build
        ninja partition_manager_report > partition_manager_report.txt

    - name: Generate Partition Manager Report
      shell: bash
      run: |
        sed '1d' ${{ inputs.path }}/build/partition_manager_report.txt > artifacts/pmr-${{ inputs.short_board }}-nrf91-default-${{ steps.setup.outputs.VERSION }}.txt
