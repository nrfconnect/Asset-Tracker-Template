name: Build and Test

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: Build all board configurations
        type: boolean
        required: true
        default: false
      device_thingy91x:
        description: 'Test thingy91x'
        type: boolean
        required: false
        default: true
      device_nrf9151dk:
        description: 'Test nrf9151dk'
        type: boolean
        required: false
        default: false
      device_ppk_thingy91x:
        description: 'Test ppk_thingy91x'
        type: boolean
        required: false
        default: false
      device_gnss_nrf9151dk:
        description: 'Test gnss_nrf9151dk'
        type: boolean
        required: false
        default: false
      device_prov_thingy91x:
        description: 'Test prov_thingy91x'
        type: boolean
        required: false
        default: false

  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      devices: ${{ steps.setup.outputs.devices }}
      build_all: ${{ steps.setup.outputs.build_all == 'true' }}
      push_memory_badges: ${{ steps.setup.outputs.push_memory_badges == 'true' }}
    steps:
      - name: Setup
        id: setup
        run: |
          SCHEDULED=${{ github.event_name == 'schedule' }}
          PUSH=${{ github.event_name == 'push' }}
          push_memory_badges=false
          if [[ $SCHEDULED == true ]]; then
            devices="thingy91x nrf9151dk ppk_thingy91x gnss_nrf9151dk prov_thingy91x"
            build_all=true
            push_memory_badges=true
          elif [[ $PUSH == true ]]; then
            devices="thingy91x"
            build_all=false
          else
            # Build devices list from selected checkboxes
            devices=""
            if [[ "${{ inputs.device_thingy91x }}" == "true" ]]; then
              devices="$devices thingy91x"
            fi
            if [[ "${{ inputs.device_nrf9151dk }}" == "true" ]]; then
              devices="$devices nrf9151dk"
            fi
            if [[ "${{ inputs.device_ppk_thingy91x }}" == "true" ]]; then
              devices="$devices ppk_thingy91x"
            fi
            if [[ "${{ inputs.device_gnss_nrf9151dk }}" == "true" ]]; then
              devices="$devices gnss_nrf9151dk"
            fi
            if [[ "${{ inputs.device_prov_thingy91x }}" == "true" ]]; then
              devices="$devices prov_thingy91x"
            fi
            # Trim leading space
            devices=$(echo "$devices" | xargs)
            build_all=${{ inputs.build_all }}
          fi
          echo "devices=$devices"
          echo "build_all=$build_all"
          echo "push_memory_badges=$push_memory_badges"
          echo "devices=$devices" >> $GITHUB_OUTPUT
          echo "build_all=$build_all" >> $GITHUB_OUTPUT
          echo "push_memory_badges=$push_memory_badges" >> $GITHUB_OUTPUT
  build:
    needs: setup
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      build_all: ${{ needs.setup.outputs.build_all == 'true' }}
      push_memory_badges: ${{ needs.setup.outputs.push_memory_badges == 'true' }}
  test:
    permissions:
      actions: read
      contents: write
      packages: read
    uses: ./.github/workflows/target-test.yml
    needs: [build, setup]
    secrets: inherit
    with:
      artifact_fw_version: ${{ needs.build.outputs.version }}
      artifact_run_id: ${{ needs.build.outputs.run_id }}
      devices: ${{ needs.setup.outputs.devices }}
      test_all: ${{ needs.setup.outputs.build_all == 'true' }}
